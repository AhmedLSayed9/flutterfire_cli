name: all_packages
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
      - name: "Analyze"
        uses: invertase/github-action-dart-analyzer@v1
        with:
          fatal-infos: true
          fatal-warnings: true

  format:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
      - name: "Check formatting"
        run: melos run format-check

  test_linux:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '3.0.0-dev.0'   
      - name: "Install Firebase CLI"
        run: |
          sudo npm i -g firebase-tools
      - name: Set Firebase service account environment variable
        run: echo "export FIREBASE_TOKEN=$FIREBASE_TOKEN" >> $GITHUB_ENV
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}          
      - name: Install FlutterFire
        run: |
          dart pub global activate --source="path" . --executable="flutterfire" --overwrite  
      - name: "Run Tests"
        run: melos run test --no-select

  test_macos:
    runs-on: macos-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '3.0.0-dev.0'
      - name: "Install Firebase CLI"
        run: |
          sudo npm i -g firebase-tools 
      # - name: Set Firebase token as environment variable
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} 
      - name: Install FlutterFire
        run: |
          dart pub global activate --source="path" . --executable="flutterfire" --overwrite        
      - name: "Run Tests"
        run: melos run test --no-select
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} 

  test_windows:
    runs-on: windows-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '3.0.0-dev.0'  
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        name: Install Node.js 16
        with:
          node-version: "16"
      - name: "Install Firebase CLI"
        run: |
          sudo npm i -g firebase-tools
      - name: Set Firebase service account environment variable
        run: echo "export FIREBASE_SERVICE_ACCOUNT=$FIREBASE_SERVICE_ACCOUNT" >> $GITHUB_ENV
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      - name: Install FlutterFire
        run: |
          dart pub global activate --source="path" . --executable="flutterfire" --overwrite
      - uses: actions/checkout@v2
      - name: "Run Tests"
        run: cmd /K melos run test --no-select
